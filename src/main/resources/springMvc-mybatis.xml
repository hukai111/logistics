<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.0.xsd">
   
    <!-- 打开 annotation -->       
    <context:annotation-config/>
    <!-- 自动扫描所有的dao组件 -->
	<context:component-scan base-package="com.sanyang" use-default-filters="false">
	    <context:include-filter type="regex" expression="com.sanyang.logistics.*.dao.*"/>
	    <context:include-filter type="regex" expression="com.sanyang.logistics.*.service.*"/>
	</context:component-scan>
	
	<!-- 设置返回json的编码格式 -->
	<bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
	     <property name="supportedMediaTypes">
	         <list>
	             <value>application/json;charset=UTF-8</value>
	         </list>
	     </property>
	 </bean>
	 <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	     <property name="messageConverters">
	         <list>
	             <ref bean="stringConverter" />
	             <ref bean="jsonConverter" />
	         </list>
	     </property>
	 </bean>
 
	<!-- 引入配置文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:db.properties" />
	</bean>
	<!-- 配置数据源 -->
	<bean id="MyDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" >
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
	</bean>
	<!-- 创建mybatis客户端 -->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="MyDataSource" />
	    <property name="mapperLocations" value="classpath:com/sanyang/logistics/*/mapper/*Mapper.xml"/>
	    <property name="configLocation" value="classpath:mybatis-config.xml" />
	    <property name="typeAliasesPackage" value="com.sanyang.logistics.vo"></property>  
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
	  <constructor-arg index="0" ref="SqlSessionFactory" />  
	  <!-- <constructor-arg index="1" value="BATCH" />如果想要进行批量操作可加入这个属性 -->
	</bean>
	
	<!-- 自动加载扫描mapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sanyang.logistics.*.mapper" />
	</bean>
	
	<!-- 配置事务跟踪机制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="MyDataSource"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
 		<tx:attributes>
 			<tx:method name="getUser" read-only="true" />
 			<tx:method name="add*" propagation="REQUIRED" />
 			<tx:method name="qyery*" read-only="false" propagation="NOT_SUPPORTED" /> 
 			<tx:method name="save*" propagation="REQUIRED" /> 
 			<tx:method name="update*" propagation="REQUIRED" /> 
 			<tx:method name="delete*" propagation="REQUIRED" /> 
 		</tx:attributes> 
 	</tx:advice> 
	
	
	
	
  	
</beans>